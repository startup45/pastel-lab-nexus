
import React, { useState } from 'react';
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { Input } from '@/components/ui/input';
import { Label } from '@/components/ui/label';
import { useAuth } from '@/contexts/AuthContext';
import { Textarea } from '@/components/ui/textarea';
import { Switch } from '@/components/ui/switch';

const Settings: React.FC = () => {
  const { user, checkPermission } = useAuth();
  const isAdmin = checkPermission(['admin']);
  
  const [isDarkMode, setIsDarkMode] = useState(false);
  const [labSettings, setLabSettings] = useState({
    labName: 'Advanced Diagnostic Laboratory',
    address: '123 Medical Center Drive, Metropolis, NY 10001',
    phone: '(555) 123-4567',
    email: 'info@advancedlab.com',
    website: 'www.advancedlab.com',
    logo: '',
    header: '',
    footer: 'Results validated by electronic signature. Report generated by Lab Management System v1.0',
    signatures: []
  });

  const [userSettings, setUserSettings] = useState({
    notifyNewReports: true,
    notifyCriticalResults: true,
    defaultDateFormat: 'MM/DD/YYYY',
    itemsPerPage: '10'
  });

  const handleLabSettingChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {
    setLabSettings({
      ...labSettings,
      [e.target.name]: e.target.value
    });
  };

  const handleUserSettingChange = (e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) => {
    setUserSettings({
      ...userSettings,
      [e.target.name]: e.target.type === 'checkbox' ? (e.target as HTMLInputElement).checked : e.target.value
    });
  };

  const handleSwitchChange = (name: string, checked: boolean) => {
    setUserSettings({
      ...userSettings,
      [name]: checked
    });
  };

  if (!isAdmin) {
    return (
      <div className="min-h-[50vh] flex items-center justify-center">
        <div className="text-center">
          <h2 className="text-2xl font-bold mb-2">Access Restricted</h2>
          <p className="text-muted-foreground">
            Only administrators can access the settings page.
          </p>
        </div>
      </div>
    );
  }

  return (
    <div className="space-y-6 animate-fade-in">
      <div>
        <h1 className="text-2xl font-bold tracking-tight">Settings</h1>
        <p className="text-muted-foreground">Configure lab and system settings.</p>
      </div>
      
      <div className="grid gap-6 md:grid-cols-2">
        <Card>
          <CardHeader>
            <CardTitle>Lab Information</CardTitle>
            <CardDescription>
              Update your laboratory details that will appear in reports and documents
            </CardDescription>
          </CardHeader>
          <CardContent className="space-y-4">
            <div className="space-y-2">
              <Label htmlFor="labName">Lab Name</Label>
              <Input 
                id="labName" 
                name="labName" 
                value={labSettings.labName}
                onChange={handleLabSettingChange}
              />
            </div>
            <div className="space-y-2">
              <Label htmlFor="address">Address</Label>
              <Textarea 
                id="address" 
                name="address" 
                rows={2}
                value={labSettings.address}
                onChange={handleLabSettingChange}
              />
            </div>
            <div className="grid grid-cols-2 gap-4">
              <div className="space-y-2">
                <Label htmlFor="phone">Phone</Label>
                <Input 
                  id="phone" 
                  name="phone" 
                  value={labSettings.phone}
                  onChange={handleLabSettingChange}
                />
              </div>
              <div className="space-y-2">
                <Label htmlFor="email">Email</Label>
                <Input 
                  id="email" 
                  name="email" 
                  type="email"
                  value={labSettings.email}
                  onChange={handleLabSettingChange}
                />
              </div>
            </div>
            <div className="space-y-2">
              <Label htmlFor="website">Website</Label>
              <Input 
                id="website" 
                name="website" 
                value={labSettings.website}
                onChange={handleLabSettingChange}
              />
            </div>
            <Button className="w-full bg-lab-primary hover:bg-lab-primary/90">Save Lab Info</Button>
          </CardContent>
        </Card>
        
        <Card>
          <CardHeader>
            <CardTitle>Report Settings</CardTitle>
            <CardDescription>
              Configure the appearance and content of lab reports
            </CardDescription>
          </CardHeader>
          <CardContent className="space-y-4">
            <div className="space-y-2">
              <Label htmlFor="logo">Logo</Label>
              <div className="flex items-center gap-2">
                <Input 
                  id="logo" 
                  name="logo" 
                  type="file" 
                  className="cursor-pointer"
                />
              </div>
            </div>
            <div className="space-y-2">
              <Label htmlFor="header">Report Header</Label>
              <Textarea 
                id="header" 
                name="header" 
                rows={2}
                placeholder="Custom header text for reports"
                value={labSettings.header}
                onChange={handleLabSettingChange}
              />
            </div>
            <div className="space-y-2">
              <Label htmlFor="footer">Report Footer</Label>
              <Textarea 
                id="footer" 
                name="footer" 
                rows={2}
                value={labSettings.footer}
                onChange={handleLabSettingChange}
              />
            </div>
            <div className="space-y-2">
              <Label htmlFor="signature">Digital Signature</Label>
              <Input 
                id="signature" 
                name="signature" 
                type="file"
                className="cursor-pointer" 
              />
              <p className="text-xs text-muted-foreground mt-1">
                Upload signature image to be applied to reports
              </p>
            </div>
            <Button className="w-full bg-lab-primary hover:bg-lab-primary/90">Save Report Settings</Button>
          </CardContent>
        </Card>
      </div>

      <Card>
        <CardHeader>
          <CardTitle>User Preferences</CardTitle>
          <CardDescription>
            Customize your experience with the lab management system
          </CardDescription>
        </CardHeader>
        <CardContent className="space-y-6">
          <div className="grid md:grid-cols-2 gap-6">
            <div className="space-y-4">
              <div className="flex items-center justify-between">
                <div>
                  <Label htmlFor="notifyNewReports" className="text-base">
                    Notify New Reports
                  </Label>
                  <p className="text-sm text-muted-foreground">
                    Receive notifications when new reports are available
                  </p>
                </div>
                <Switch
                  id="notifyNewReports"
                  checked={userSettings.notifyNewReports}
                  onCheckedChange={(checked) => handleSwitchChange('notifyNewReports', checked)}
                />
              </div>
              <div className="flex items-center justify-between">
                <div>
                  <Label htmlFor="notifyCriticalResults" className="text-base">
                    Critical Results Alert
                  </Label>
                  <p className="text-sm text-muted-foreground">
                    Highlight and notify critical test results
                  </p>
                </div>
                <Switch
                  id="notifyCriticalResults"
                  checked={userSettings.notifyCriticalResults}
                  onCheckedChange={(checked) => handleSwitchChange('notifyCriticalResults', checked)}
                />
              </div>
            </div>
            
            <div className="space-y-4">
              <div className="flex items-center justify-between">
                <div>
                  <Label htmlFor="darkMode" className="text-base">
                    Dark Mode
                  </Label>
                  <p className="text-sm text-muted-foreground">
                    Switch between light and dark theme
                  </p>
                </div>
                <Switch
                  id="darkMode"
                  checked={isDarkMode}
                  onCheckedChange={setIsDarkMode}
                />
              </div>
              <div className="flex items-center justify-between">
                <div>
                  <Label htmlFor="itemsPerPage" className="text-base">
                    Items Per Page
                  </Label>
                  <p className="text-sm text-muted-foreground">
                    Number of items to display in tables
                  </p>
                </div>
                <div className="w-20">
                  <select
                    id="itemsPerPage"
                    name="itemsPerPage"
                    className="w-full rounded-md border border-input bg-background px-3 py-1"
                    value={userSettings.itemsPerPage}
                    onChange={handleUserSettingChange}
                  >
                    <option value="10">10</option>
                    <option value="25">25</option>
                    <option value="50">50</option>
                    <option value="100">100</option>
                  </select>
                </div>
              </div>
            </div>
          </div>
          
          <div className="flex justify-end">
            <Button className="bg-lab-primary hover:bg-lab-primary/90">
              Save Preferences
            </Button>
          </div>
        </CardContent>
      </Card>
    </div>
  );
};

export default Settings;
